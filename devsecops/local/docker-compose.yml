version: '3'
services:
  ug-osm2pgsql:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-osm2pgsql/Dockerfile
    container_name: ug-osm2pgsql
    depends_on:
      - 'ug-postgresql'
    env_file:
      - ./ug-osm2pgsql/env/root.env
    image: ug-osm2pgsql
    networks:
      - ug-public
    volumes:
      - type: bind
        source: ../../data/osm/
        target: /tmp/osm
  ug-postgresql:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-postgresql/Dockerfile
    container_name: ug-postgresql
    env_file:
      - ./ug-postgresql/env/root.env
      - ./ug-postgresql/env/read.env
    image: ug-postgresql
    networks:
      - ug-public
    ports:
      - 5433:5432
    volumes:
      # Use this option to persistently store data in a Docker volume.
      - ug-postgresql:/var/lib/postgresql/data
      # Use this option to make data available to the local filesystem.
      - type: bind
        source: ../../data/mire/
        target: /tmp/mire
      - type: bind
        source: ../../data/dc/
        target: /tmp/dc
      - type: bind
        source: ../../data/trafficvolume/
        target: /tmp/trafficvolume
  ug-satimages:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-satimages/Dockerfile
    depends_on:
      ug-osmpostprocess:
        condition: service_completed_successfully
    container_name: ug-satimages
    env_file:
      - ./ug-satimages/env/root.env
      - ./ug-satimages/env/read.env
    image: ug-satimages
    networks:
      - ug-public
    volumes:
      - type: bind
        source: ../../services/generate_satimages_masks/data/
        target: /usr/src/app/data/
  ug-osmpostprocess:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-osmpostprocess/Dockerfile
    depends_on:
      ug-osm2pgsql:
        condition: service_completed_successfully
    container_name: ug-osmpostprocess
    env_file:
      - ./ug-osm2pgsql/env/root.env
    image: ug-osmpostprocess
    networks:
      - ug-public

networks:
  ug-public:

volumes:
  ug-postgresql:
