version: '2'
services:
  ug-postgresql:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-postgresql/Dockerfile
    container_name: ug-postgresql
    env_file:
      - ./env/db_root_user.env
    image: ug-postgresql
    networks:
      - ug-public
    ports:
      - 5433:5432
    volumes:
      # Use this option to persistently store data in a Docker volume.
      - ug-postgresql:/var/lib/postgresql/data
      # Use this option to make data available to the local filesystem.
      - type: bind
        source: ./ug-postgresql/mire/
        target: /data/mire/
      - type: bind
        source: ./ug-postgresql/init/
        target: /init/
  ug-populate-region:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-populate-region/Dockerfile
    command: './wait-for -t 0 ug-postgresql:5432 -- ./init.sh'
    container_name: ug-populate-region
    env_file:
      - ./env/db_builder.env
    image: ug-populate-region
    networks:
      - ug-public
    volumes:
      # Use this option to make data available to the local filesystem.
      - type: bind
        source: ../../data/
        target: /data/
  ug-osmingest:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-osmingest/Dockerfile
    container_name: ug-osmingest
    command: './wait-for -t 0 ug-postgresql:5432 -- python -u ./ingest_osm_data.py'
    env_file:
      - ./env/db_builder.env
    image: ug-osmingest
    networks:
      - ug-public
    volumes:
      - type: bind
        source: ../../data/
        target: /data/
  ug-satimages:
    build:
      context: ../..
      dockerfile: ./devsecops/local/ug-satimages/Dockerfile
    command: './wait-for -t 0 ug-postgresql:5432 -- python -u ./satimages/generate_intersection_masks.py'
    container_name: ug-satimages
    env_file:
      - ./env/mapbox.env
    image: ug-satimages
    networks:
      - ug-public
    volumes:
      - type: bind
        source: ../../services/generate_satimages_masks/data/
        target: /usr/src/app/data/

networks:
  ug-public:

volumes:
  ug-postgresql:
